{"ast":null,"code":"var _jsxFileName = \"/home/tim/Documents/The-Odin-Project/Projects/React-JS/react-library-app/src/components/book-tiles.js\";\nimport React from 'react';\n\nconst BookCard = props => {\n  const {\n    libraryArray\n  } = props;\n\n  function changeReadStatus(e) {\n    // e.preventDefault();\n    let key = e.target.dataset.key;\n    let book = libraryArray.find(theKey);\n\n    function theKey(book) {\n      return book.id === key;\n    }\n\n    if (book.bookRead === \"read\") {\n      book.bookRead = \"unread\";\n    } else {\n      book.bookRead = \"read\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, libraryArray.map(book => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: book.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }\n    }, `${book.title} by ${book.author} has ${book.pages} pages and this book is `, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: changeReadStatus,\n      \"data-key\": book.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: book.bookRead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, book.bookRead), /*#__PURE__*/React.createElement(\"option\", {\n      value: book.bookRead === \"read\" ? \"unread\" : \"read\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, book.bookRead === \"read\" ? \"unread\" : \"read\")));\n  })));\n};\n\nexport default BookCard;","map":{"version":3,"sources":["/home/tim/Documents/The-Odin-Project/Projects/React-JS/react-library-app/src/components/book-tiles.js"],"names":["React","BookCard","props","libraryArray","changeReadStatus","e","key","target","dataset","book","find","theKey","id","bookRead","map","title","author","pages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;;AACA,WAASE,gBAAT,CAA0BC,CAA1B,EAA6B;AACzB;AACA,QAAIC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBF,GAA3B;AACA,QAAIG,IAAI,GAAGN,YAAY,CAACO,IAAb,CAAkBC,MAAlB,CAAX;;AACA,aAASA,MAAT,CAAgBF,IAAhB,EAAsB;AAClB,aAAOA,IAAI,CAACG,EAAL,KAAYN,GAAnB;AACH;;AACD,QAAIG,IAAI,CAACI,QAAL,KAAkB,MAAtB,EAA8B;AAC1BJ,MAAAA,IAAI,CAACI,QAAL,GAAgB,QAAhB;AACH,KAFD,MAEO;AACHJ,MAAAA,IAAI,CAACI,QAAL,GAAgB,MAAhB;AACH;AACJ;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,YAAY,CAACW,GAAb,CAAkBL,IAAD,IAAU;AACxB,wBAAO;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,GAAEH,IAAI,CAACM,KAAM,OAAMN,IAAI,CAACO,MAAO,QAAOP,IAAI,CAACQ,KAAM,0BAD5C,eAEP;AAAQ,MAAA,QAAQ,EAAEb,gBAAlB;AAAoC,kBAAUK,IAAI,CAACG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAEH,IAAI,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BJ,IAAI,CAACI,QAApC,CADJ,eAEI;AAAQ,MAAA,KAAK,EAAEJ,IAAI,CAACI,QAAL,KAAkB,MAAlB,GAA2B,QAA3B,GAAsC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DJ,IAAI,CAACI,QAAL,KAAkB,MAAlB,GAA2B,QAA3B,GAAsC,MAApG,CAFJ,CAFO,CAAP;AAOH,GARA,CADL,CADJ,CADJ;AAeH,CA9BD;;AAgCA,eAAeZ,QAAf","sourcesContent":["import React from 'react';\n\nconst BookCard = (props) => {\n    const { libraryArray } = props;\n    function changeReadStatus(e) {\n        // e.preventDefault();\n        let key = e.target.dataset.key;\n        let book = libraryArray.find(theKey);\n        function theKey(book) {\n            return book.id === key;\n        }\n        if (book.bookRead === \"read\") {\n            book.bookRead = \"unread\";\n        } else {\n            book.bookRead = \"read\"\n        }\n    }\n    return(\n        <div>\n            <section>\n                {libraryArray.map((book) => {\n                    return <div key={book.id}>\n                    {`${book.title} by ${book.author} has ${book.pages} pages and this book is `} \n                    <select onChange={changeReadStatus} data-key={book.id}>\n                        <option value={book.bookRead}>{book.bookRead}</option>\n                        <option value={book.bookRead === \"read\" ? \"unread\" : \"read\"}>{book.bookRead === \"read\" ? \"unread\" : \"read\"}</option>\n                    </select>\n                    </div>\n                })}\n            </section>\n        </div>\n    )\n}\n\nexport default BookCard;"]},"metadata":{},"sourceType":"module"}