{"ast":null,"code":"var _jsxFileName = \"/home/tim/Documents/GitHub/book-shelf-react-app/src/components/input-form.js\";\nimport React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setExampleBook_Dune = () => {\n      let book = {\n        title: 'Dune',\n        author: 'Frank Herbert',\n        pages: '658',\n        bookRead: 'read',\n        id: uniqid()\n      };\n      return book;\n    };\n\n    this.setExampleBook_1984 = () => {\n      let book = {\n        title: '1984',\n        author: 'George Orwell',\n        pages: '298',\n        bookRead: 'read',\n        id: uniqid()\n      };\n      return book;\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      });\n      this.setBookObj();\n    };\n\n    this.setBookObj = () => {\n      this.setState({\n        book: {\n          title: this.state.bookTitle,\n          author: this.state.bookAuthor,\n          pages: this.state.bookPages,\n          bookRead: this.state.isBookRead,\n          id: uniqid()\n        }\n      });\n    };\n\n    this.removeBook = e => {\n      // Use the book element instead of the dataset\n      let bookByID = e.target.dataset.key;\n      this.setState({\n        library: this.state.library.filter(book => book.id !== bookByID)\n      });\n    };\n\n    this.toggleFormDisplay = () => {\n      this.state.displayForm === true ? this.setState({\n        displayForm: false\n      }) : this.setState({\n        displayForm: true\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        library: this.state.library.concat(this.state.book),\n        bookTitle: '',\n        bookAuthor: '',\n        bookPages: '',\n        isBookRead: 'read'\n      });\n      return this.toggleFormDisplay();\n    };\n\n    this.updateLibraryArray = book => {\n      let update = book;\n      let bookIndex = this.state.library.findIndex(book => book.id === update.id); // Update array without splice\n\n      this.state.library.splice(bookIndex, 1, update);\n      this.setState({\n        library: this.state.library\n      });\n    };\n\n    this.state = {\n      library: [this.setExampleBook_Dune(), this.setExampleBook_1984()],\n      displayForm: false,\n      bookTitle: '',\n      bookAuthor: '',\n      bookPages: '',\n      isBookRead: 'read',\n      book: {\n        title: '',\n        author: '',\n        pages: '',\n        bookRead: '',\n        id: uniqid()\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.removeBook = this.removeBook.bind(this);\n    this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    this.updateLibraryArray = this.updateLibraryArray.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form-and-card-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"book-parent-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, this.state.library.map(book => {\n      return /*#__PURE__*/React.createElement(BookCard, {\n        key: book.id,\n        book: book,\n        removeBook: this.removeBook,\n        updateLibraryArray: this.updateLibraryArray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 32\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"toggle-btn\",\n      onClick: this.toggleFormDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Toggle Add A Book Form\"), this.state.displayForm === false ? null : /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-a-book-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"This book is:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"isBookRead\",\n      value: this.state.isBookRead,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"--select one--\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"read\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"read\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"unread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"unread\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Book Title\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookTitle\",\n      type: \"text\",\n      value: this.state.bookTitle,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Author\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookAuthor\",\n      type: \"text\",\n      value: this.state.bookAuthor,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Number of Pages\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookPages\",\n      type: \"number\",\n      value: this.state.bookPages,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"ADD\")));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/tim/Documents/GitHub/book-shelf-react-app/src/components/input-form.js"],"names":["React","BookCard","uniqid","Form","Component","constructor","props","setExampleBook_Dune","book","title","author","pages","bookRead","id","setExampleBook_1984","handleChange","e","value","target","name","setState","setBookObj","state","bookTitle","bookAuthor","bookPages","isBookRead","removeBook","bookByID","dataset","key","library","filter","toggleFormDisplay","displayForm","handleSubmit","preventDefault","concat","updateLibraryArray","update","bookIndex","findIndex","splice","bind","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: [this.setExampleBook_Dune(), this.setExampleBook_1984()],\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n        this.updateLibraryArray = this.updateLibraryArray.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n        let book = {\n            title: 'Dune',\n            author: 'Frank Herbert',\n            pages: '658',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({ [name]: value });\n        this.setBookObj();\n    }\n\n    setBookObj = () => {\n        this.setState({\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: uniqid(),\n            },\n        });\n    }\n\n    removeBook = (e) => {\n        // Use the book element instead of the dataset\n        let bookByID = e.target.dataset.key\n        this.setState({\n            library: this.state.library.filter(book => book.id !== bookByID),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        this.state.displayForm === true ? this.setState({ displayForm: false }) : this.setState({ displayForm: true });\n    }\n\n    // consoleLogLibrary = () => {\n    //     console.log(this.state.library);\n    // }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.state.book),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n        });\n        return this.toggleFormDisplay();\n    }\n\n    updateLibraryArray = (book) => {\n        let update = book;\n        let bookIndex = this.state.library.findIndex(book => book.id === update.id);\n        // Update array without splice\n        this.state.library.splice(bookIndex, 1, update);\n        this.setState({ library: this.state.library });\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n            {/* <button onClick={this.consoleLogLibrary}>\n                console.log library\n            </button> */}\n                <div id='book-parent-div'>\n                    {this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook} updateLibraryArray={this.updateLibraryArray}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}