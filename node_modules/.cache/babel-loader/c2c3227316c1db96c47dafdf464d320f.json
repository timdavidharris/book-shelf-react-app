{"ast":null,"code":"var _jsxFileName = \"/home/tim/Documents/GitHub/book-shelf-react-app/src/components/book-card.js\";\nimport React from 'react';\n\nclass BookCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteBook = () => {\n      if (window.confirm(`Click \"OK\" if you want to delete ${this.state.bookTitle} from your shelf`)) {\n        return this.state.removeBook(this.state.book);\n      }\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.bookObj = () => {\n      let book = {\n        title: this.state.bookTitle,\n        author: this.state.bookAuthor,\n        pages: this.state.bookPages,\n        bookRead: this.state.isBookRead,\n        id: this.state.id\n      };\n      return book;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.toggleEditFormDisplay();\n      this.state.updateLibraryArray(this.bookObj());\n    };\n\n    this.updateReadStatus = () => {\n      this.state.isBookRead === \"read\" ? this.setState({\n        isBookRead: \"unread\"\n      }) : this.setState({\n        isBookRead: \"read\"\n      });\n      this.setBookObj();\n      this.state.updateLibraryArray(this.bookObj());\n    };\n\n    this.toggleEditFormDisplay = () => {\n      this.state.hideEditForm === true ? this.setState({\n        hideEditForm: false\n      }) : this.setState({\n        hideEditForm: true\n      });\n    };\n\n    this.state = {\n      bookTitle: props.book.title,\n      bookAuthor: props.book.author,\n      bookPages: props.book.pages,\n      isBookRead: props.book.bookRead,\n      id: props.book.id,\n      removeBook: props.removeBook,\n      updateLibraryArray: props.updateLibraryArray,\n      hideEditForm: true // book: {\n      //     title: props.book.title,\n      //     author: props.book.author,\n      //     pages: props.book.pages,\n      //     bookRead: props.book.bookRead,\n      //     id: props.book.id,\n      // }\n\n    };\n    this.updateReadStatus = this.updateReadStatus.bind(this);\n    this.deleteBook = this.deleteBook.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.bookObj = this.bookObj.bind(this);\n    this.toggleEditFormDisplay = this.toggleEditFormDisplay.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"book-child-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, `${this.state.bookTitle} by ${this.state.bookAuthor} has ${this.state.bookPages} pages and is ${this.state.isBookRead}`, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.updateReadStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Change Read Status\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleEditFormDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Edit Book\"), this.state.hideEditForm === true ? null : /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-a-book-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Book Title\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookTitle\",\n      type: \"text\",\n      value: this.state.bookTitle,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Author\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookAuthor\",\n      type: \"text\",\n      value: this.state.bookAuthor,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Number of Pages\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookPages\",\n      type: \"number\",\n      value: this.state.bookPages,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-key\": this.state.id,\n      onClick: this.deleteBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"DELETE BOOK\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"EDIT\")));\n  }\n\n}\n\nexport default BookCard;","map":{"version":3,"sources":["/home/tim/Documents/GitHub/book-shelf-react-app/src/components/book-card.js"],"names":["React","BookCard","Component","constructor","props","deleteBook","window","confirm","state","bookTitle","removeBook","book","handleChange","e","value","target","name","setState","bookObj","title","author","bookAuthor","pages","bookPages","bookRead","isBookRead","id","handleSubmit","preventDefault","toggleEditFormDisplay","updateLibraryArray","updateReadStatus","setBookObj","hideEditForm","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookTitle: props.book.title,\n            bookAuthor: props.book.author,\n            bookPages: props.book.pages,\n            isBookRead: props.book.bookRead,\n            id: props.book.id,\n            removeBook: props.removeBook,\n            updateLibraryArray: props.updateLibraryArray,\n            hideEditForm: true,\n            // book: {\n            //     title: props.book.title,\n            //     author: props.book.author,\n            //     pages: props.book.pages,\n            //     bookRead: props.book.bookRead,\n            //     id: props.book.id,\n            // }\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.bookObj = this.bookObj.bind(this);\n        this.toggleEditFormDisplay = this.toggleEditFormDisplay.bind(this);\n    }\n\n    deleteBook = () => {\n        if (window.confirm(`Click \"OK\" if you want to delete ${this.state.bookTitle} from your shelf`)) {\n            return this.state.removeBook(this.state.book);\n        }\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    bookObj = () => {\n        let book = {\n            title: this.state.bookTitle,\n            author: this.state.bookAuthor,\n            pages: this.state.bookPages,\n            bookRead: this.state.isBookRead,\n            id: this.state.id,\n        }\n        return book;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.toggleEditFormDisplay();\n        this.state.updateLibraryArray(this.bookObj());\n    }\n\n    updateReadStatus = () => {\n        this.state.isBookRead === \"read\" ? this.setState({ isBookRead: \"unread\" }) : this.setState({ isBookRead: \"read\" });\n        this.setBookObj();\n        this.state.updateLibraryArray(this.bookObj());\n    }\n\n    toggleEditFormDisplay = () => {\n        this.state.hideEditForm === true ? this.setState({ hideEditForm: false }) : this.setState({ hideEditForm: true });\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.bookTitle} by ${this.state.bookAuthor} has ${this.state.bookPages} pages and is ${this.state.isBookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button onClick={this.toggleEditFormDisplay}>\n                    Edit Book\n                </button>\n                {this.state.hideEditForm === true ? null : \n                    <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <button data-key={this.state.id} onClick={this.deleteBook}>\n                    DELETE BOOK\n                    </button>\n                    <br />\n                    <button type='submit'>\n                        EDIT\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BookCard;"]},"metadata":{},"sourceType":"module"}