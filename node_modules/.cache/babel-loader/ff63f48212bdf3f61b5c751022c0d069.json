{"ast":null,"code":"var _jsxFileName = \"/home/tim/Documents/GitHub/book-shelf-react-app/src/components/input-form.js\";\nimport React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setExampleBook_Dune = () => {\n      let book = {\n        title: 'Dune',\n        author: 'Frank Herbert',\n        pages: '658',\n        bookRead: 'read',\n        id: uniqid()\n      };\n      return book;\n    };\n\n    this.setExampleBook_1984 = () => {\n      let book = {\n        title: '1984',\n        author: 'George Orwell',\n        pages: '298',\n        bookRead: 'read',\n        id: uniqid()\n      };\n      return book;\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      });\n      this.bookObj();\n    };\n\n    this.bookObj = () => {\n      let book = {\n        title: this.state.bookTitle,\n        author: this.state.bookAuthor,\n        pages: this.state.bookPages,\n        bookRead: this.state.isBookRead,\n        id: this.state.id\n      };\n      return book;\n    };\n\n    this.removeBook = book => {\n      let deleteMe = book;\n      this.setState({\n        library: this.state.library.filter(book => book.id !== deleteMe.id)\n      });\n    };\n\n    this.toggleFormDisplay = () => {\n      this.state.displayForm === true ? this.setState({\n        displayForm: false\n      }) : this.setState({\n        displayForm: true\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        library: this.state.library.concat(this.bookObj()),\n        bookTitle: '',\n        bookAuthor: '',\n        bookPages: '',\n        isBookRead: 'read'\n      });\n      return this.toggleFormDisplay();\n    };\n\n    this.updateLibraryArray = book => {\n      let update = book;\n      let bookIndex = this.state.library.findIndex(book => book.id === update.id);\n      this.state.library.splice(bookIndex, 1, update);\n      this.setState({\n        library: this.state.library\n      });\n      this.updateLocalStorage();\n    };\n\n    this.updateLocalStorage = () => {\n      localStorage.setItem('libraryArray', JSON.stringify(this.state.library));\n    };\n\n    this.state = {\n      library: localStorage.getItem('libraryArray') === null ? [this.setExampleBook_Dune(), this.setExampleBook_1984()] : JSON.parse(localStorage.getItem('libraryArray')),\n      displayForm: false,\n      bookTitle: '',\n      bookAuthor: '',\n      bookPages: '',\n      isBookRead: 'read',\n      id: uniqid()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.removeBook = this.removeBook.bind(this);\n    this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    this.updateLibraryArray = this.updateLibraryArray.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form-and-card-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"book-parent-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, this.state.library === undefined ? null : this.state.library.map(book => {\n      return /*#__PURE__*/React.createElement(BookCard, {\n        key: book.id,\n        book: book,\n        removeBook: this.removeBook,\n        updateLibraryArray: this.updateLibraryArray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 32\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"toggle-btn\",\n      onClick: this.toggleFormDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Toggle Add A Book Form\"), this.state.displayForm === false ? null : /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-a-book-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"This book is:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"isBookRead\",\n      value: this.state.isBookRead,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"--select one--\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"read\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"read\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"unread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"unread\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Book Title\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookTitle\",\n      type: \"text\",\n      value: this.state.bookTitle,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Author\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookAuthor\",\n      type: \"text\",\n      value: this.state.bookAuthor,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Number of Pages\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"bookPages\",\n      type: \"number\",\n      value: this.state.bookPages,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, \"ADD\")));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/tim/Documents/GitHub/book-shelf-react-app/src/components/input-form.js"],"names":["React","BookCard","uniqid","Form","Component","constructor","props","setExampleBook_Dune","book","title","author","pages","bookRead","id","setExampleBook_1984","handleChange","e","value","target","name","setState","bookObj","state","bookTitle","bookAuthor","bookPages","isBookRead","removeBook","deleteMe","library","filter","toggleFormDisplay","displayForm","handleSubmit","preventDefault","concat","updateLibraryArray","update","bookIndex","findIndex","splice","updateLocalStorage","localStorage","setItem","JSON","stringify","getItem","parse","bind","render","undefined","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: localStorage.getItem('libraryArray') === null ? [this.setExampleBook_Dune(), this.setExampleBook_1984()] : JSON.parse(localStorage.getItem('libraryArray')),\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            id: uniqid(),\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n        this.updateLibraryArray = this.updateLibraryArray.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n        let book = {\n            title: 'Dune',\n            author: 'Frank Herbert',\n            pages: '658',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({ [name]: value });\n        this.bookObj();\n    }\n\n    bookObj = () => {\n        let book = {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.id,\n            }\n        return book;\n    }\n\n    removeBook = (book) => {\n        let deleteMe = book;\n        this.setState({\n            library: this.state.library.filter(book => book.id !== deleteMe.id),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        this.state.displayForm === true ? this.setState({ displayForm: false }) : this.setState({ displayForm: true });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.bookObj()),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n        });\n        return this.toggleFormDisplay();\n    }\n\n    updateLibraryArray = (book) => {\n        let update = book;\n        let bookIndex = this.state.library.findIndex(book => book.id === update.id);\n        this.state.library.splice(bookIndex, 1, update);\n        this.setState({ library: this.state.library });\n        this.updateLocalStorage();\n    }\n\n    updateLocalStorage = () => {\n        localStorage.setItem('libraryArray', JSON.stringify(this.state.library));\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n                <div id='book-parent-div'>\n                    {this.state.library === undefined ? null : this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook} updateLibraryArray={this.updateLibraryArray}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}