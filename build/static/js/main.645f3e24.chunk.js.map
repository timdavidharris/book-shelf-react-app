{"version":3,"sources":["components/AddBook.js","components/Book.js","components/GithubLink.js","components/Library.js","App.js","index.js"],"names":["NewBook","props","useState","formDisplay","setFormDisplay","addBookToLibrary","library","title","author","pages","bookRead","id","Math","floor","random","book","setBook","handleChange","e","target","name","value","toggleFormDisplay","className","onClick","onSubmit","preventDefault","onChange","required","type","BookCard","displayEditForm","setDisplayEditForm","confirmDelete","setConfirmDelete","updateLibrary","removeBook","GithubLink","href","rel","supabase","createClient","randomNumber","Library","setLibrary","upsertLibrary","a","forEach","newBook","from","upsert","data","error","select","libraryArray","map","item","update","bookIndex","findIndex","splice","updatedArray","filter","readRows","getLibrary","concat","undefined","length","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.645f3e24.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// For Reference:\n// https://medium.com/nerd-for-tech/how-to-build-forms-with-multiple-input-fields-using-react-hooks-677da2b851aa\n\nexport default function NewBook(props) {\n    const randomNumber = () => {\n        return Math.floor(Math.random() * 1000);\n    }\n    const [formDisplay, setFormDisplay] = useState(false);\n    const library = props.library;\n    const addBookToLibrary = props.addBookToLibrary;\n    const [book, setBook] = useState({\n        title: \"\", \n        author: \"\", \n        pages: \"\", \n        bookRead: \"read\", \n        id: randomNumber()});\n\n    const handleChange = (e) => {\n        setBook({...book, [e.target.name]: e.target.value});\n    }\n\n    const toggleFormDisplay = () => {\n        formDisplay === true ? setFormDisplay(false) : setFormDisplay(true);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addBookToLibrary(book);\n        return toggleFormDisplay();\n    }\n\n    return(\n        <div className='form-and-card-div'>\n            <button className='toggle-btn' onClick={toggleFormDisplay}>\n                Add A Book\n            </button>\n            {formDisplay === false ? null : \n            <div className='modal'>\n            <span className='close-btn' onClick={toggleFormDisplay}>&times;</span>\n            <form className='modal-content add-a-book-form' onSubmit={handleSubmit}>\n                <label>\n                    This book is:\n                    <br />\n                    <select \n                        name=\"bookRead\"\n                        value={book.bookRead}\n                        onChange={handleChange}\n                        required\n                    >\n                    <option value=\"\">--select one--</option>\n                    <option value={\"read\"}>read</option>\n                    <option value={\"unread\"}>unread</option>\n                    </select>\n                </label>\n                <br />\n                <label>\n                    Book Title\n                <input \n                    name=\"title\"\n                    type=\"text\"\n                    value={book.title}\n                    onChange={handleChange}\n                    required\n                />\n                </label>\n                <label>\n                    Author\n                <input\n                    name=\"author\"\n                    type=\"text\"\n                    value={book.author}\n                    onChange={handleChange}\n                    required\n                />\n                </label>\n                <label>\n                    Number of Pages\n                <input\n                    name=\"pages\"\n                    type=\"number\"\n                    value={book.pages}\n                    onChange={handleChange}\n                    required\n                />\n                </label>\n                <button type='submit'>\n                    ADD\n                </button>\n            </form>\n            </div>\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function BookCard(props) {\n    const [book, setBook] = useState(props.book);\n    const [displayEditForm, setDisplayEditForm] = useState(false);\n    const [confirmDelete, setConfirmDelete] = useState(\"hide\");\n    const updateLibrary = props.updateLibrary;\n    const removeBook = props.removeBook;\n\n    const handleChange = (e) => {\n        setBook({...book, [e.target.name]: e.target.value});\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setDisplayEditForm(false);\n        updateLibrary(book);\n    }\n\n    const updateReadStatus = () => {\n        if (book.bookRead === \"read\") {\n            book.bookRead = \"unread\";\n            setBook(book => ({...book, bookRead: \"unread\"}))\n        } else {\n            book.bookRead = \"read\";\n            setBook(book => ({...book, bookRead: \"read\"}))\n        }\n        updateLibrary(book);\n    }\n\n    return (\n        <div className='book-child-div'>\n            {`${book.title} by ${book.author} has ${book.pages} pages and is ${book.bookRead}`}\n            <button onClick={updateReadStatus}>\n                Change Read Status\n            </button>\n            <button onClick={() => setDisplayEditForm(true)}>\n                Edit Book\n            </button>\n            { confirmDelete === \"hide\" ? \n                <button onClick={() => setConfirmDelete(\"show\")}>\n                DELETE BOOK\n                </button>\n                :\n                <div className='modal'>\n                    <span className='close-btn' onClick={() => setConfirmDelete(\"hide\")}>&times;</span>\n                    <div className='modal-content'>\n                        <button onClick={() => removeBook(book)}>\n                            YES, DELETE BOOK\n                        </button>\n                        <br />\n                        <button onClick={() => setConfirmDelete(\"hide\")}>\n                            NO, do NOT delete Book\n                        </button>\n                    </div>\n                </div>\n                }\n            {displayEditForm === false ? null :\n                <div className='modal'>\n                <span className='close-btn' onClick={() => setDisplayEditForm(false)}>&times;</span>\n                <form className='modal-content add-a-book-form' onSubmit={handleSubmit}>\n                <label>\n                    Book Title\n                <input \n                    name=\"title\"\n                    type=\"text\"\n                    value={book.title}\n                    onChange={handleChange}\n                />\n                </label>\n                <label>\n                    Author\n                <input\n                    name=\"author\"\n                    type=\"text\"\n                    value={book.author}\n                    onChange={handleChange}\n                />\n                </label>\n                <label>\n                    Number of Pages\n                <input\n                    name=\"pages\"\n                    type=\"number\"\n                    value={book.pages}\n                    onChange={handleChange}\n                />\n                </label>\n                <br />\n                <button type='submit'>\n                    EDIT\n                </button>\n            </form>\n            </div>\n            }\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function GithubLink() {\n    return (\n        <div id='github'>\n            <a href='https://github.com/timdavidharris/book-shelf-react-app' target='_blank' rel=\"noopener noreferrer\">\n                GitHub Link\n            </a>\n        </div>\n    )\n}\n","import { createClient } from '@supabase/supabase-js'\nimport React, { useState } from 'react'\nimport AddBook from './AddBook';\nimport Book from './Book';\nimport GithubLink from './GithubLink';\n\nconst supabaseUrl = 'https://viyyqfksopapspnrgxwi.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZpeXlxZmtzb3BhcHNwbnJneHdpIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDY3MDk5MTIsImV4cCI6MTk2MjI4NTkxMn0.HkJJK2a8rUPa-EU3VUeiibZD76AJSjTK7rQ7BcWi_as';\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst randomNumber = () => {\n    return Math.floor(Math.random() * 1000);\n}\n\nconst dune = {\n    title: 'Dune',\n    author: 'Frank Herbert',\n    pages: '658',\n    bookRead: 'read',\n    id: randomNumber(),\n}\n\nconst nineteen84 = {\n    title: '1984',\n    author: 'George Orwell',\n    pages: '298',\n    bookRead: 'read',\n    id: randomNumber(),\n}\n\nexport default function Library() {\n    const [library, setLibrary] = useState([]);\n\n    async function upsertLibrary(library) {\n        library.forEach(async function(book) {\n            const newBook = {'data': book};\n            const { data, error } = await supabase\n                .from('test_table')\n                .upsert({ id: newBook.data.id, book: newBook })\n        });\n    }\n    \n    async function getLibrary() {\n        const { data, error } = await supabase\n            .from('test_table')\n            .select()\n        const libraryArray = data.map((item) => {\n            return item.book.data;\n        });\n        setLibrary(libraryArray);\n    }\n\n    async function readRows() {\n        let data = await supabase.from('test_table').select('*');\n    }\n\n    const addBookToLibrary = (book) => {\n        setLibrary(library.concat(book));\n    }\n\n    const updateLibrary = (book) => {\n        let update = book;\n        let bookIndex = library.findIndex(book => book.id === update.id);\n        library.splice(bookIndex, 1, update);\n        setLibrary(library)\n        upsertLibrary(library);\n    }\n\n    const removeBook = (book) => {\n        let updatedArray = library.filter(item => item.id !== book.id)\n        setLibrary(updatedArray);\n        upsertLibrary(updatedArray);\n    }\n\n    return(\n        <main>\n            <header>\n                <h1>\n                    Book Shelf\n                </h1>\n                <h2>\n                    Books on Your Shelf\n                </h2>\n            </header>\n            <div>\n                <button onClick={() => upsertLibrary(library)}>\n                    Click to Upsert Data\n                </button>\n                <button onClick={() => readRows()}>\n                    Click to Read Rows\n                </button>\n                <button onClick={() => getLibrary()} >\n                    Click to Get Library\n                </button>\n            </div>\n            <section>\n                <AddBook library={library} addBookToLibrary={addBookToLibrary}/>\n            </section>\n            <section className='book-parent-div'>\n                {library === undefined || library.length === 0 ? \n                <div className='book-child-div'>\n                    ☝️\n                    <br />\n                    <h3>Humm... no books? \n                    <br />\n                    Click \"Add A Book\" to start your library!\n                    </h3>\n                </div> : \n                library.map((book) => {\n                    return <Book key={book.id} book={book} updateLibrary={updateLibrary} removeBook={removeBook}/>;\n                })}\n            </section>\n            <footer>\n                <GithubLink />\n            </footer>\n        </main>\n    );\n}\n\n","import React from 'react';\nimport Library from './components/Library';\n\nexport default function App() {\n  return (<Library />);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}