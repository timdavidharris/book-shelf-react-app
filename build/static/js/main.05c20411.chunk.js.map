{"version":3,"sources":["components/book-card.js","components/input-form.js","App.js","index.js"],"names":["BookCard","props","deleteBook","e","state","removeBook","handleChange","value","target","name","console","log","setState","title","bookTitle","author","bookAuthor","pages","bookPages","bookRead","isBookRead","id","book","handleSubmit","preventDefault","toggleEditFormDisplay","updateReadStatus","hideEditForm","bind","this","onClick","onSubmit","type","onChange","data-key","React","Component","Form","setExampleBook_Dune","uniqid","setExampleBook_1984","bookByID","dataset","key","library","filter","toggleFormDisplay","displayForm","concat","map","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05c20411.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookTitle: props.book.title,\n            bookAuthor: props.book.author,\n            bookPages: props.book.pages,\n            isBookRead: props.book.bookRead,\n            book: {\n                title: props.book.title,\n                author: props.book.author,\n                pages: props.book.pages,\n                bookRead: props.book.bookRead,\n                id: props.book.id,\n            },\n            removeBook: props.removeBook,\n            hideEditForm: true,\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    deleteBook = (e) => {\n        return this.state.removeBook(e);\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n        console.log(name, value);\n\n        this.setState({\n            [name]: value,\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.book.id,\n            },\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.toggleEditFormDisplay();\n    }\n\n    updateReadStatus = () => {\n        if (this.state.book.bookRead === \"read\") {\n            this.setState({ \n                book: { \n                    title: this.state.book.title,\n                    author: this.state.book.author,\n                    pages: this.state.book.pages,\n                    bookRead: \"unread\", \n                    id: this.state.book.id,\n                } \n            })\n        } else {\n            this.setState({ \n                book: { \n                    title: this.state.book.title,\n                    author: this.state.book.author,\n                    pages: this.state.book.pages,\n                    bookRead: \"read\", \n                    id: this.state.book.id,\n                } \n            })\n        }\n    }\n\n    toggleEditFormDisplay = () => {\n        this.state.hideEditForm === true ? this.setState({hideEditForm: false}) : this.setState({hideEditForm: true});\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.bookTitle} by ${this.state.bookAuthor} has ${this.state.bookPages} pages and is ${this.state.isBookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button onClick={this.toggleEditFormDisplay}>\n                    Edit Book\n                </button>\n                {this.state.hideEditForm === true ? null : \n                    <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <button data-key={this.state.book.id} onClick={this.deleteBook}>\n                    Remove Book\n                    </button>\n                    <br />\n                    <button type='submit'>\n                        EDIT\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: [this.setExampleBook_Dune(), this.setExampleBook_1984()],\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n            let book = {\n                title: 'Dune',\n                author: 'Frank Herbert',\n                pages: '658',\n                bookRead: 'read',\n                id: uniqid(),\n            }\n            return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.book.id,\n            },\n        });\n    }\n\n    removeBook = (e) => {\n        let bookByID = e.target.dataset.key\n        this.setState({\n            library: this.state.library.filter(book => book.id !== bookByID),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        if (this.state.displayForm === true) {\n            this.setState({displayForm: false});\n        } else {\n            this.setState({displayForm: true});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.state.book),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        });\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n                <div id='book-parent-div'>\n                    {this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Form from './components/input-form';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <Form />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}