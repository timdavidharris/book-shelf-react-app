{"version":3,"sources":["components/book-card.js","components/input-form.js","App.js","index.js"],"names":["BookCard","props","deleteBook","e","state","removeBook","updateReadStatus","book","bookRead","setState","title","author","pages","id","editBook","hideEdit","bind","this","onClick","data-key","onSubmit","handleSubmit","name","value","onChange","handleChange","required","type","React","Component","Form","setExampleBook_Dune","uniqid","setExampleBook_1984","target","bookTitle","bookAuthor","bookPages","isBookRead","bookByID","dataset","key","library","filter","toggleFormDisplay","displayForm","preventDefault","concat","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.885461cd.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            book: {\n                title: props.book.title,\n                author: props.book.author,\n                pages: props.book.pages,\n                bookRead: props.book.bookRead,\n                id: props.book.id,\n            },\n            removeBook: props.removeBook,\n            hideEdit: true,\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n    }\n\n    deleteBook = (e) => {\n        return this.state.removeBook(e);\n    }\n\n    updateReadStatus = () => {\n        if (this.state.book.bookRead === \"read\") {\n            this.setState({ \n                book: { \n                    title: this.state.book.title,\n                    author: this.state.book.author,\n                    pages: this.state.book.pages,\n                    bookRead: \"unread\", \n                    id: this.state.book.id,\n                } \n            })\n        } else {\n            this.setState({ \n                book: { \n                    title: this.state.book.title,\n                    author: this.state.book.author,\n                    pages: this.state.book.pages,\n                    bookRead: \"read\", \n                    id: this.state.book.id,\n                } \n            })\n        }\n    }\n\n    editBook = () => {\n        this.state.hideEdit === true ? this.setState({hideEdit: false}) : this.setState({hideEdit: true});\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.book.title} by ${this.state.book.author} has ${this.state.book.pages} pages and is ${this.state.book.bookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button data-key={this.state.book.id} onClick={this.deleteBook}>\n                    Remove Book\n                </button>\n                <button onClick={this.editBook}>\n                    Edit Book\n                </button>\n                {this.state.hideEdit === true ? null : \n                    <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.book.bookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.book.title}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.book.author}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.book.pages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: [this.setExampleBook_Dune(), this.setExampleBook_1984()],\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n            let book = {\n                title: 'Dune',\n                author: 'Frank Herbert',\n                pages: '658',\n                bookRead: 'read',\n                id: uniqid(),\n            }\n            return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.book.id,\n            },\n        });\n    }\n\n    removeBook = (e) => {\n        let bookByID = e.target.dataset.key\n        this.setState({\n            library: this.state.library.filter(book => book.id !== bookByID),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        if (this.state.displayForm === true) {\n            this.setState({displayForm: false});\n        } else {\n            this.setState({displayForm: true});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.state.book),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        });\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n                <div id='book-parent-div'>\n                    {this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Form from './components/input-form';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <Form />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}