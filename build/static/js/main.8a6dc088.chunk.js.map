{"version":3,"sources":["components/book-card.js","components/input-form.js","App.js","index.js"],"names":["BookCard","props","deleteBook","e","window","confirm","state","bookTitle","removeBook","handleChange","value","target","name","setState","handleSubmit","preventDefault","toggleEditFormDisplay","updateReadStatus","isBookRead","hideEditForm","book","title","bookAuthor","author","bookPages","pages","bookRead","id","bind","this","onClick","onSubmit","type","onChange","data-key","React","Component","Form","setExampleBook_Dune","uniqid","setExampleBook_1984","bookByID","dataset","key","library","filter","toggleFormDisplay","displayForm","concat","map","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a6dc088.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookTitle: props.book.title,\n            bookAuthor: props.book.author,\n            bookPages: props.book.pages,\n            isBookRead: props.book.bookRead,\n            id: props.book.id,\n            removeBook: props.removeBook,\n            hideEditForm: true,\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    deleteBook = (e) => {\n        if (window.confirm(`Click \"OK\" if you want to delete ${this.state.bookTitle} from your shelf`)) {\n            return this.state.removeBook(e);\n        }\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.toggleEditFormDisplay();\n    }\n\n    updateReadStatus = () => {\n        if (this.state.isBookRead === \"read\") {\n            this.setState({ isBookRead: \"unread\" })\n        } else {\n            this.setState({ isBookRead: \"read\" })\n        }\n    }\n\n    toggleEditFormDisplay = () => {\n        this.state.hideEditForm === true ? this.setState({hideEditForm: false}) : this.setState({hideEditForm: true});\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.bookTitle} by ${this.state.bookAuthor} has ${this.state.bookPages} pages and is ${this.state.isBookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button onClick={this.toggleEditFormDisplay}>\n                    Edit Book\n                </button>\n                {this.state.hideEditForm === true ? null : \n                    <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <button data-key={this.state.id} onClick={this.deleteBook}>\n                    Remove Book\n                    </button>\n                    <br />\n                    <button type='submit'>\n                        EDIT\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: [this.setExampleBook_Dune(), this.setExampleBook_1984()],\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n            let book = {\n                title: 'Dune',\n                author: 'Frank Herbert',\n                pages: '658',\n                bookRead: 'read',\n                id: uniqid(),\n            }\n            return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.book.id,\n            },\n        });\n    }\n\n    removeBook = (e) => {\n        let bookByID = e.target.dataset.key\n        this.setState({\n            library: this.state.library.filter(book => book.id !== bookByID),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        if (this.state.displayForm === true) {\n            this.setState({displayForm: false});\n        } else {\n            this.setState({displayForm: true});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.state.book),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        });\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n                <div id='book-parent-div'>\n                    {this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Form from './components/input-form';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <Form />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}