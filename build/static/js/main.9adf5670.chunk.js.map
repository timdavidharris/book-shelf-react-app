{"version":3,"sources":["components/book-card.js","components/input-form.js","App.js","index.js"],"names":["BookCard","props","deleteBook","e","state","removeBook","updateReadStatus","book","bookRead","setState","title","author","pages","id","bind","this","onClick","data-key","React","Component","Form","setExampleBook","uniqid","handleChange","value","target","name","bookTitle","bookAuthor","bookPages","isBookRead","bookByID","dataset","key","library","filter","toggleFormDisplay","displayForm","handleSubmit","preventDefault","concat","map","onSubmit","onChange","required","type","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9adf5670.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            book: {\n                title: props.book.title,\n                author: props.book.author,\n                pages: props.book.pages,\n                bookRead: props.book.bookRead,\n                id: props.book.id,\n            },\n            removeBook: props.removeBook,\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n    }\n\n    deleteBook = (e) => {\n        return this.state.removeBook(e);\n    }\n\n    updateReadStatus = () => {\n        if (this.state.book.bookRead === \"read\") {\n            this.setState({ \n                book: { \n                    title: this.state.book.title,\n                    author: this.state.book.author,\n                    pages: this.state.book.pages,\n                    bookRead: \"unread\", \n                    id: this.state.book.id,\n                } \n            })\n        } else {\n            this.setState({ \n                book: { \n                    title: this.state.book.title,\n                    author: this.state.book.author,\n                    pages: this.state.book.pages,\n                    bookRead: \"read\", \n                    id: this.state.book.id,\n                } \n            })\n        }\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.book.title} by ${this.state.book.author} has ${this.state.book.pages} pages and is ${this.state.book.bookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button data-key={this.state.book.id} onClick={this.deleteBook}>\n                    Remove Book\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: [this.setExampleBook(), this.setExampleBook()],\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    }\n\n    setExampleBook = () => {\n            let book = {\n                title: 'Example Book',\n                author: 'Example Author',\n                pages: '301',\n                bookRead: 'read',\n                id: uniqid(),\n            }\n            return book;\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.book.id,\n            },\n        });\n    }\n\n    removeBook = (e) => {\n        let bookByID = e.target.dataset.key\n        this.setState({\n            library: this.state.library.filter(book => book.id !== bookByID),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        if (this.state.displayForm === true) {\n            this.setState({displayForm: false});\n        } else {\n            this.setState({displayForm: true});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.state.book),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        });\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n                <div id='book-parent-div'>\n                    {this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Form from './components/input-form';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <Form />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}