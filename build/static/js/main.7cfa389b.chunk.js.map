{"version":3,"sources":["components/book-card.js","components/input-form.js","App.js","index.js"],"names":["BookCard","props","deleteBook","window","confirm","state","bookTitle","removeBook","book","handleChange","e","value","target","name","setState","setBookObj","title","author","bookAuthor","pages","bookPages","bookRead","isBookRead","id","handleSubmit","preventDefault","toggleEditFormDisplay","updateLibraryArray","updateReadStatus","hideEditForm","bind","this","onClick","onSubmit","type","onChange","data-key","React","Component","Form","setExampleBook_Dune","uniqid","setExampleBook_1984","deleteMe","library","filter","toggleFormDisplay","displayForm","concat","update","bookIndex","findIndex","splice","updateLocalStorage","localStorage","setItem","JSON","stringify","getItem","parse","undefined","map","key","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cfa389b.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookTitle: props.book.title,\n            bookAuthor: props.book.author,\n            bookPages: props.book.pages,\n            isBookRead: props.book.bookRead,\n            id: props.book.id,\n            removeBook: props.removeBook,\n            updateLibraryArray: props.updateLibraryArray,\n            hideEditForm: true,\n            book: {\n                title: props.book.title,\n                author: props.book.author,\n                pages: props.book.pages,\n                bookRead: props.book.bookRead,\n                id: props.book.id,\n            }\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setBookObj = this.setBookObj.bind(this);\n        this.toggleEditFormDisplay = this.toggleEditFormDisplay.bind(this);\n    }\n\n    deleteBook = () => {\n        if (window.confirm(`Click \"OK\" if you want to delete ${this.state.bookTitle} from your shelf`)) {\n            return this.state.removeBook(this.state.book);\n        }\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n        });\n        this.setBookObj();\n    }\n\n    setBookObj = () => {\n        this.setState({\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.id,\n            },\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.toggleEditFormDisplay();\n        this.state.updateLibraryArray(this.state.book);\n    }\n\n    updateReadStatus = () => {\n        this.state.isBookRead === \"read\" ? this.setState({ isBookRead: \"unread\" }) : this.setState({ isBookRead: \"read\" });\n        this.setBookObj();\n        this.state.updateLibraryArray(this.state.book);\n    }\n\n    toggleEditFormDisplay = () => {\n        this.state.hideEditForm === true ? this.setState({ hideEditForm: false }) : this.setState({ hideEditForm: true });\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.bookTitle} by ${this.state.bookAuthor} has ${this.state.bookPages} pages and is ${this.state.isBookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button onClick={this.toggleEditFormDisplay}>\n                    Edit Book\n                </button>\n                {this.state.hideEditForm === true ? null : \n                    <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <button data-key={this.state.id} onClick={this.deleteBook}>\n                    DELETE BOOK\n                    </button>\n                    <br />\n                    <button type='submit'>\n                        EDIT\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: localStorage.getItem('libraryArray') === null ? [this.setExampleBook_Dune(), this.setExampleBook_1984()] : JSON.parse(localStorage.getItem('libraryArray')),\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            book: {\n                title: '',\n                author: '',\n                pages: '',\n                bookRead: '',\n                id: uniqid(),\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n        this.updateLibraryArray = this.updateLibraryArray.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n        let book = {\n            title: 'Dune',\n            author: 'Frank Herbert',\n            pages: '658',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({ [name]: value });\n        this.setBookObj();\n    }\n\n    setBookObj = () => {\n        this.setState({\n            book: {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: uniqid(),\n            },\n        });\n    }\n\n    removeBook = (book) => {\n        let deleteMe = book;\n        this.setState({\n            library: this.state.library.filter(book => book.id !== deleteMe.id),\n        })\n    }\n\n    toggleFormDisplay = () => {\n        this.state.displayForm === true ? this.setState({ displayForm: false }) : this.setState({ displayForm: true });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.state.book),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n        });\n        return this.toggleFormDisplay();\n    }\n\n    updateLibraryArray = (book) => {\n        let update = book;\n        let bookIndex = this.state.library.findIndex(book => book.id === update.id);\n        this.state.library.splice(bookIndex, 1, update);\n        this.setState({ library: this.state.library });\n        this.updateLocalStorage();\n    }\n\n    updateLocalStorage = () => {\n        localStorage.setItem('libraryArray', JSON.stringify(this.state.library));\n    }\n\n    // consoleLogLibrary = () => {\n    //     console.log(this.state.library);\n    // }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n            {/* <button onClick={this.consoleLogLibrary}>\n                console.log library\n            </button> */}\n                <div id='book-parent-div'>\n                    {this.state.library === undefined ? null : this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook} updateLibraryArray={this.updateLibraryArray}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Form from './components/input-form';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <Form />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}