{"version":3,"sources":["components/book-card.js","components/input-form.js","App.js","index.js"],"names":["BookCard","props","deleteBook","state","removeBook","bookObj","toggleDeleteConfirm","handleChange","e","value","target","name","setState","title","bookTitle","author","bookAuthor","pages","bookPages","bookRead","isBookRead","id","handleSubmit","preventDefault","toggleEditFormDisplay","updateLibraryArray","updateReadStatus","hideEditForm","hideDeleteConfirm","book","bind","this","onClick","onSubmit","type","onChange","React","Component","Form","setExampleBook_Dune","uniqid","setExampleBook_1984","updatedArray","library","filter","item","updateLocalStorage","toggleFormDisplay","displayForm","concat","update","bookIndex","findIndex","splice","libraryArray","localStorage","setItem","JSON","stringify","getItem","parse","undefined","map","key","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.588df2fc.chunk.js","sourcesContent":["import React from 'react';\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookTitle: props.book.title,\n            bookAuthor: props.book.author,\n            bookPages: props.book.pages,\n            isBookRead: props.book.bookRead,\n            id: props.book.id,\n            removeBook: props.removeBook,\n            updateLibraryArray: props.updateLibraryArray,\n            hideEditForm: true,\n            hideDeleteConfirm: true,\n        }\n        this.updateReadStatus = this.updateReadStatus.bind(this);\n        this.deleteBook = this.deleteBook.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.bookObj = this.bookObj.bind(this);\n        this.toggleEditFormDisplay = this.toggleEditFormDisplay.bind(this);\n    }\n\n    deleteBook = () => {\n        this.state.removeBook(this.bookObj());\n        this.toggleDeleteConfirm();\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    bookObj = () => {\n        let book = {\n            title: this.state.bookTitle,\n            author: this.state.bookAuthor,\n            pages: this.state.bookPages,\n            bookRead: this.state.isBookRead,\n            id: this.state.id,\n        }\n        return book;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.toggleEditFormDisplay();\n        this.state.updateLibraryArray(this.bookObj());\n    }\n\n    updateReadStatus = () => {\n        if (this.state.isBookRead === \"read\") {\n            // eslint-disable-next-line\n            this.state.isBookRead = \"unread\";\n            this.setState({ isBookRead: \"unread\" })\n        } else {\n            // eslint-disable-next-line\n            this.state.isBookRead = \"read\"\n            this.setState({ isBookRead: \"read\" })\n        }\n        this.state.updateLibraryArray(this.bookObj());\n    }\n\n    toggleEditFormDisplay = () => {\n        this.state.hideEditForm === true ? this.setState({ hideEditForm: false }) : this.setState({ hideEditForm: true });\n    }\n\n    toggleDeleteConfirm = () => {\n        this.state.hideDeleteConfirm === true ? this.setState({ hideDeleteConfirm: false }) : this.setState({ hideDeleteConfirm: true })\n    }\n\n    render() {\n        return (\n            <div id='book-child-div'>\n                {`${this.state.bookTitle} by ${this.state.bookAuthor} has ${this.state.bookPages} pages and is ${this.state.isBookRead}`}\n                <button onClick={this.updateReadStatus}>\n                    Change Read Status\n                </button>\n                <button onClick={this.toggleEditFormDisplay}>\n                    Edit Book\n                </button>\n                { this.state.hideDeleteConfirm === true ? \n                    <button onClick={this.toggleDeleteConfirm}>\n                    DELETE BOOK\n                    </button>\n                    :\n                    <><button onClick={this.deleteBook}>\n                        YES, DELETE BOOK\n                    </button>\n                    <button onClick={this.toggleDeleteConfirm}>\n                        NO, do NOT delete Book\n                    </button></>\n                    }\n                {this.state.hideEditForm === true ? null : \n                    <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                    />\n                    </label>\n                    <br />\n                    <button type='submit'>\n                        EDIT\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            library: localStorage.getItem('libraryArray') === null ? [this.setExampleBook_Dune(), this.setExampleBook_1984()] : JSON.parse(localStorage.getItem('libraryArray')),\n            displayForm: false,\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n            id: uniqid(),\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeBook = this.removeBook.bind(this);\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n        this.updateLibraryArray = this.updateLibraryArray.bind(this);\n    }\n\n    setExampleBook_Dune = () => {\n        let book = {\n            title: 'Dune',\n            author: 'Frank Herbert',\n            pages: '658',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n    }\n\n    setExampleBook_1984 = () => {\n        let book = {\n            title: '1984',\n            author: 'George Orwell',\n            pages: '298',\n            bookRead: 'read',\n            id: uniqid(),\n        }\n        return book;\n}\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        this.setState({ [name]: value });\n    }\n\n    bookObj = () => {\n        let book = {\n                title: this.state.bookTitle,\n                author: this.state.bookAuthor,\n                pages: this.state.bookPages,\n                bookRead: this.state.isBookRead,\n                id: this.state.id,\n            }\n        return book;\n    }\n\n    removeBook = (book) => {\n        let updatedArray = this.state.library.filter(item => item.id !== book.id)\n        this.setState({ library: updatedArray })\n        this.updateLocalStorage(updatedArray);\n    }\n\n    toggleFormDisplay = () => {\n        this.state.displayForm === true ? this.setState({ displayForm: false }) : this.setState({ displayForm: true });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            library: this.state.library.concat(this.bookObj()),\n            bookTitle: '',\n            bookAuthor: '',\n            bookPages: '',\n            isBookRead: 'read',\n        });\n        return this.toggleFormDisplay();\n    }\n\n    updateLibraryArray = (book) => {\n        let update = book;\n        let bookIndex = this.state.library.findIndex(book => book.id === update.id);\n        this.state.library.splice(bookIndex, 1, update);\n        this.setState({ library: this.state.library });\n        this.updateLocalStorage(this.state.library);\n    }\n\n    updateLocalStorage = (libraryArray) => {\n        localStorage.setItem('libraryArray', JSON.stringify(libraryArray));\n    }\n\n    render() {\n        return (\n            <div id='form-and-card-div'>\n                <div id='book-parent-div'>\n                    {this.state.library === undefined ? null : this.state.library.map((book) => {\n                        return <BookCard key={book.id} book={book} removeBook={this.removeBook} updateLibraryArray={this.updateLibraryArray}/>;\n                    })}\n                </div>\n                <button id='toggle-btn' onClick={this.toggleFormDisplay}>\n                    Toggle Add A Book Form\n                </button>\n                {this.state.displayForm === false ? null : \n                <form id='add-a-book-form' onSubmit={this.handleSubmit}>\n                    <label>\n                        This book is:\n                        <br />\n                        <select \n                            name=\"isBookRead\"\n                            value={this.state.isBookRead}\n                            onChange={this.handleChange}\n                            required\n                        >\n                        <option value=\"\">--select one--</option>\n                        <option value={\"read\"}>read</option>\n                        <option value={\"unread\"}>unread</option>\n                        </select>\n                    </label>\n                    <br />\n                    <label>\n                        Book Title\n                    <input \n                        name=\"bookTitle\"\n                        type=\"text\"\n                        value={this.state.bookTitle}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Author\n                    <input\n                        name=\"bookAuthor\"\n                        type=\"text\"\n                        value={this.state.bookAuthor}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <label>\n                        Number of Pages\n                    <input\n                        name=\"bookPages\"\n                        type=\"number\"\n                        value={this.state.bookPages}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    </label>\n                    <button type='submit'>\n                        ADD\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Form from './components/input-form';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <Form />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}