{"version":3,"sources":["components/book-card.js","components/new-book.js","components/github-link.js","App.js","index.js"],"names":["BookCard","props","useState","book","setBook","displayEditForm","setDisplayEditForm","confirmDelete","setConfirmDelete","updateLibraryArray","removeBook","handleChange","e","target","name","value","toggleEditFormDisplay","toggleConfirmDelete","className","title","author","pages","bookRead","onClick","onSubmit","preventDefault","type","onChange","NewBook","dune","id","uniqid","nineteen84","formDisplay","setFormDisplay","localStorage","getItem","JSON","parse","library","setLibrary","updatedArray","filter","item","updateLocalStorage","toggleFormDisplay","update","bookIndex","findIndex","splice","libraryArray","setItem","stringify","undefined","map","key","concat","required","GitHubLink","href","rel","App","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c35f2e2a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function BookCard(props) {\n    const [book, setBook] = useState(props.book);\n    const [displayEditForm, setDisplayEditForm] = useState(false);\n    const [confirmDelete, setConfirmDelete] = useState(\"hide\");\n    const updateLibraryArray = props.updateLibraryArray;\n    const removeBook = props.removeBook;\n\n    const handleChange = (e) => {\n        setBook({...book, [e.target.name]: e.target.value});\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setDisplayEditForm(false);\n        updateLibraryArray(book);\n    }\n\n    const updateReadStatus = () => {\n        if (book.bookRead === \"read\") {\n            book.bookRead = \"unread\";\n            setBook(book => ({...book, bookRead: \"unread\"}))\n        } else {\n            book.bookRead = \"read\";\n            setBook(book => ({...book, bookRead: \"read\"}))\n        }\n        updateLibraryArray(book);\n    }\n\n    const toggleEditFormDisplay = () => {\n        displayEditForm === false ? setDisplayEditForm(true) : setDisplayEditForm(false);\n    }\n\n    const toggleConfirmDelete = () => {\n        confirmDelete === \"show\" ? setConfirmDelete(\"hide\") : setConfirmDelete(\"show\");\n    }\n\n    return (\n        <div className='book-child-div'>\n            {`${book.title} by ${book.author} has ${book.pages} pages and is ${book.bookRead}`}\n            <button onClick={updateReadStatus}>\n                Change Read Status\n            </button>\n            <button onClick={toggleEditFormDisplay}>\n                Edit Book\n            </button>\n            { confirmDelete === \"hide\" ? \n                <button onClick={toggleConfirmDelete}>\n                DELETE BOOK\n                </button>\n                :\n                <div className='modal'>\n                    <span className='close-btn' onClick={toggleConfirmDelete}>&times;</span>\n                    <div className='modal-content'>\n                        <button onClick={() => removeBook(book)}>\n                            YES, DELETE BOOK\n                        </button>\n                        <br />\n                        <button onClick={toggleConfirmDelete}>\n                            NO, do NOT delete Book\n                        </button>\n                    </div>\n                </div>\n                }\n            {displayEditForm === false ? null :\n                <div className='modal'>\n                <span className='close-btn' onClick={toggleEditFormDisplay}>&times;</span>\n                <form className='modal-content add-a-book-form' onSubmit={handleSubmit}>\n                <label>\n                    Book Title\n                <input \n                    name=\"title\"\n                    type=\"text\"\n                    value={book.title}\n                    onChange={handleChange}\n                />\n                </label>\n                <label>\n                    Author\n                <input\n                    name=\"author\"\n                    type=\"text\"\n                    value={book.author}\n                    onChange={handleChange}\n                />\n                </label>\n                <label>\n                    Number of Pages\n                <input\n                    name=\"pages\"\n                    type=\"number\"\n                    value={book.pages}\n                    onChange={handleChange}\n                />\n                </label>\n                <br />\n                <button type='submit'>\n                    EDIT\n                </button>\n            </form>\n            </div>\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport BookCard from './book-card';\nimport uniqid from 'uniqid';\n// import SupabaseComponent from '../supabaseClient';\n\n// For Reference:\n// https://medium.com/nerd-for-tech/how-to-build-forms-with-multiple-input-fields-using-react-hooks-677da2b851aa\n\nexport default function NewBook() {\n    const dune = {\n        title: 'Dune',\n        author: 'Frank Herbert',\n        pages: '658',\n        bookRead: 'read',\n        id: uniqid(),\n    }\n\n    const nineteen84 = {\n        title: '1984',\n        author: 'George Orwell',\n        pages: '298',\n        bookRead: 'read',\n        id: uniqid(),\n    }\n\n    const [book, setBook] = useState({\n        title: \"\", \n        author: \"\", \n        pages: \"\", \n        bookRead: \"read\", \n        id: uniqid()});\n    const [formDisplay, setFormDisplay] = useState(false);\n    const [library, setLibrary] = useState(localStorage.getItem(\"libraryArray\") === null ? [dune, nineteen84] : JSON.parse(localStorage.getItem('libraryArray')));\n\n    const handleChange = (e) => {\n        setBook({...book, [e.target.name]: e.target.value});\n    }\n\n    const removeBook = (book) => {\n        let updatedArray = library.filter(item => item.id !== book.id)\n        setLibrary(updatedArray);\n        updateLocalStorage(updatedArray);\n    }\n\n    const toggleFormDisplay = () => {\n        formDisplay === true ? setFormDisplay(false) : setFormDisplay(true);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLibrary(library.concat(book));\n        return toggleFormDisplay();\n    }\n\n    const updateLibraryArray = (book) => {\n        let update = book;\n        let bookIndex = library.findIndex(book => book.id === update.id);\n        library.splice(bookIndex, 1, update);\n        setLibrary(library)\n        updateLocalStorage(library);\n    }\n\n    const updateLocalStorage = (libraryArray) => {\n        localStorage.setItem('libraryArray', JSON.stringify(libraryArray));\n    }\n\n    return(\n        <div className='form-and-card-div'>\n        {/* <SupabaseComponent library={library}/> */}\n            <div className='book-parent-div'>\n                {library === undefined ? null : library.map((book) => {\n                    return <BookCard key={book.id} book={book} removeBook={removeBook} updateLibraryArray={updateLibraryArray}/>;\n                })}\n            </div>\n            <button className='toggle-btn' onClick={toggleFormDisplay}>\n                Add A Book\n            </button>\n            {formDisplay === false ? null : \n            <div className='modal'>\n            <span className='close-btn' onClick={toggleFormDisplay}>&times;</span>\n            <form className='modal-content add-a-book-form' onSubmit={handleSubmit}>\n                <label>\n                    This book is:\n                    <br />\n                    <select \n                        name=\"bookRead\"\n                        value={book.bookRead}\n                        onChange={handleChange}\n                        required\n                    >\n                    <option value=\"\">--select one--</option>\n                    <option value={\"read\"}>read</option>\n                    <option value={\"unread\"}>unread</option>\n                    </select>\n                </label>\n                <br />\n                <label>\n                    Book Title\n                <input \n                    name=\"title\"\n                    type=\"text\"\n                    value={book.title}\n                    onChange={handleChange}\n                    required\n                />\n                </label>\n                <label>\n                    Author\n                <input\n                    name=\"author\"\n                    type=\"text\"\n                    value={book.author}\n                    onChange={handleChange}\n                    required\n                />\n                </label>\n                <label>\n                    Number of Pages\n                <input\n                    name=\"pages\"\n                    type=\"number\"\n                    value={book.pages}\n                    onChange={handleChange}\n                    required\n                />\n                </label>\n                <button type='submit'>\n                    ADD\n                </button>\n            </form>\n            </div>\n            }\n        </div>\n    )\n}\n","import React from 'react';\n\nfunction GitHubLink() {\n    return (\n        <div id='github'>\n            <a href='https://github.com/timdavidharris/book-shelf-react-app' target='_blank' rel=\"noopener noreferrer\">\n                GitHub Link\n            </a>\n        </div>\n    )\n}\n\nexport default GitHubLink;","import React from 'react';\nimport NewBook from './components/new-book';\nimport GitHubLink from './components/github-link';\n\nclass App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          Book Shelf\n        </h1>\n        <h2>\n          Books on Your Shelf\n        </h2>\n        <section id='book-cards'>\n          <NewBook />\n          <GitHubLink />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}